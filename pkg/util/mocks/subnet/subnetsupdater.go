// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/ARO-RP/pkg/util/subnet (interfaces: Updater)

// Package mock_subnet is a generated GoMock package.
package mock_subnet

import (
	reflect "reflect"

	network "github.com/Azure/azure-sdk-for-go/services/network/mgmt/2020-08-01/network"
	gomock "github.com/golang/mock/gomock"
)

// MockUpdater is a mock of Updater interface.
type MockUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockUpdaterMockRecorder
}

// MockUpdaterMockRecorder is the mock recorder for MockUpdater.
type MockUpdaterMockRecorder struct {
	mock *MockUpdater
}

// NewMockUpdater creates a new mock instance.
func NewMockUpdater(ctrl *gomock.Controller) *MockUpdater {
	mock := &MockUpdater{ctrl: ctrl}
	mock.recorder = &MockUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdater) EXPECT() *MockUpdaterMockRecorder {
	return m.recorder
}

// AddEndpointsToSubnets mocks base method.
func (m *MockUpdater) AddEndpointsToSubnets(arg0 []string, arg1 []*network.Subnet) []*network.Subnet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddEndpointsToSubnets", arg0, arg1)
	ret0, _ := ret[0].([]*network.Subnet)
	return ret0
}

// AddEndpointsToSubnets indicates an expected call of AddEndpointsToSubnets.
func (mr *MockUpdaterMockRecorder) AddEndpointsToSubnets(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddEndpointsToSubnets", reflect.TypeOf((*MockUpdater)(nil).AddEndpointsToSubnets), arg0, arg1)
}
